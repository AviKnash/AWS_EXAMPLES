#! /usr/bin/env bash

set -e 

# Create our VPC

VPC_ID=$(aws ec2 create-vpc --cidr-block "172.1.0.0/16" \
--region us-east-1 \
--tag-specifications 'ResourceType=vpc,Tags=[{Key=Name,Value=my-vpc-3}]' \
--query Vpc.VpcId \
--output text)

echo "VPC_ID : $VPC_ID"

# Turn on DNS hostnames

aws ec2 modify-vpc-attribute --vpc-id $VPC_ID --enable-dns-hostnames "{\"Value\":true}"

# Create an IGW

IGW_ID=$(aws ec2 create-internet-gateway \
--query InternetGateway.InternetGatewayId \
--output text
)

echo "IGW_ID: $IGW_ID"

# Attach IGW

aws ec2 attach-internet-gateway --internet-gateway-id $IGW_ID --vpc-id $VPC_ID


# Create a new subnet

SUBNET_ID=$(aws ec2 create-subnet \
--vpc-id $VPC_ID \
--cidr-block 172.1.0.0/20 \
--query Subnet.SubnetId \
--output text)


echo "SUBNET_ID: $SUBNET_ID"

#Auto assign IpV4

aws ec2 modify-subnet-attribute \
--subnet-id $SUBNET_ID \
--map-public-ip-on-launch

# Get route table id

RT_ID=$(aws ec2 describe-route-tables \
--filters "Name=vpc-id,Values=$VPC_ID" "Name=association.main,Values=true" \
--query "RouteTables[].RouteTableId[]" \
--output text
)

echo "RT_ID: $RT_ID"

# Explicitily asociate subnet

aws ec2 associate-route-table --route-table-id $RT_ID \
--subnet-id $SUBNET_ID

#Add a route for RT to IGW

aws ec2 create-route --route-table-id $RT_ID \
 --destination-cidr-block 0.0.0.0/0 \
 --gateway-id $IGW_ID

 echo "./delete-vpc $VPC_ID $IGW_ID $RT_ID $SUBNET_ID"